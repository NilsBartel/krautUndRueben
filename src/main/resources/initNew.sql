DROP DATABASE IF EXISTS krautundrueben;
CREATE DATABASE IF NOT EXISTS krautundrueben;
USE krautundrueben;

CREATE TABLE POSTLEITZAHL (
    POSTLEITZAHL    VARCHAR(5) NOT NULL ,
    ORT             VARCHAR(50) NOT NULL ,
    STADT           VARCHAR(50),
    LAND            VARCHAR(50),
    PRIMARY KEY (POSTLEITZAHL,ORT)
);

CREATE TABLE KUNDE (
    KUNDENNR        INTEGER NOT NULL,
    NACHNAME        VARCHAR(50),
    VORNAME         VARCHAR(50),
    GEBURTSDATUM	DATE,
    STRASSE         VARCHAR(50),
    HAUSNR		    VARCHAR(6),
    TELEFON         VARCHAR(25),
    EMAIL           VARCHAR(50),
    ABO             BOOLEAN,
    USERNAME        VARCHAR(50),
    PASSHASH        VARCHAR(255),
    POSTLEITZAHL    VARCHAR(5),
    ORT             VARCHAR(50),
    UNIQUE (USERNAME),
    PRIMARY KEY (KUNDENNR),
    FOREIGN KEY (POSTLEITZAHL, ORT) REFERENCES POSTLEITZAHL (POSTLEITZAHL, ORT)
);

CREATE TABLE BESTELLUNG (
    BESTELLNR        INTEGER AUTO_INCREMENT NOT NULL,
    KUNDENNR         INTEGER,
    BESTELLDATUM     DATE,
    PRIMARY KEY (BESTELLNR),
    FOREIGN KEY (KUNDENNR) REFERENCES KUNDE (KUNDENNR)
);

CREATE TABLE NAHRUNGSBOX (
    BOXNR           INTEGER NOT NULL,
    BEZEICHNUNG     VARCHAR(50),
    BESCHREIBUNG    VARCHAR(500),
    PRIMARY KEY (BOXNR)
);

CREATE TABLE BESTELLUNG_BOX (
    BESTELLNR       INTEGER NOT NULL,
    BOXNR           INTEGER NOT NULL,
    MENGE           INTEGER,
    PRIMARY KEY (BESTELLNR,BOXNR),
    FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG (BESTELLNR),
    FOREIGN KEY (BOXNR) REFERENCES NAHRUNGSBOX (BOXNR)
);

CREATE TABLE REZEPT (
    REZEPTNR        INTEGER NOT NULL,
    NAME            VARCHAR(50),
    BESCHREIBUNG    VARCHAR(50),
    VORGEHEN        VARCHAR(500),
    PRIMARY KEY (REZEPTNR)
);

CREATE TABLE NAHRUNGSBOX_REZEPT (
    BOXNR           INTEGER NOT NULL,
    REZEPTNR        INTEGER NOT NULL,
    MENGE_REZEPTE   INTEGER,
    PRIMARY KEY (BOXNR,REZEPTNR),
    FOREIGN KEY (BOXNR) REFERENCES NAHRUNGSBOX (BOXNR),
    FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR)
);

CREATE TABLE ZUTAT (
    ZUTATNR         INTEGER NOT NULL,
    BEZEICHNUNG     VARCHAR(50),
    BESCHREIBUNG    VARCHAR(100),
    EINHEIT         VARCHAR(25),
    BESTAND         INTEGER,
    NETTOPREIS      DECIMAL(10,2),
    CO2             DECIMAL(10,2),
    KOHLENHYDRATE   DECIMAL(10,2),
    PROTEIN         DECIMAL(10,2),
    FETT            DECIMAL(10,2),
    KALORIEN        INTEGER,
    PRIMARY KEY (ZUTATNR)
);

CREATE TABLE REZEPT_ZUTAT (
    REZEPTNR        INTEGER NOT NULL,
    ZUTATNR         INTEGER NOT NULL,
    MENGE           INTEGER,
    PRIMARY KEY (REZEPTNR,ZUTATNR),
    FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR),
    FOREIGN KEY (ZUTATNR) REFERENCES ZUTAT (ZUTATNR)
);

CREATE TABLE ALERGEN (
    ALERGENNR       INTEGER NOT NULL,
    BEZEICHNUNG     VARCHAR(50),
    BESCHREIBUNG    VARCHAR(100),
    PRIMARY KEY (ALERGENNR)
);

CREATE TABLE ZUTAT_ALERGEN (
    ZUTATNR         INTEGER NOT NULL,
    ALERGENNR       INTEGER NOT NULL,
    PRIMARY KEY (ZUTATNR,ALERGENNR),
    FOREIGN KEY (ZUTATNR) REFERENCES ZUTAT (ZUTATNR),
    FOREIGN KEY (ALERGENNR) REFERENCES ALERGEN (ALERGENNR)
);

CREATE TABLE ERNAEHRUNGSKATEGORIE (
    ERNAEHRUNGSKATNR    INTEGER NOT NULL,
    BEZEICHNUNG         VARCHAR(50),
    BESCHREIBUNG        VARCHAR(100),
    TYP                 VARCHAR(25),
    PRIORITAET          INTEGER,
    PRIMARY KEY (ERNAEHRUNGSKATNR)
    -- TODO:
);

CREATE TABLE ZUTAT_ERNAEHRUNGSKATEGORIE (
    ZUTATNR             INTEGER NOT NULL,
    ERNAEHRUNGSKATNR    INTEGER NOT NULL,
    PRIMARY KEY (ZUTATNR,ERNAEHRUNGSKATNR),
    FOREIGN KEY (ZUTATNR) REFERENCES ZUTAT (ZUTATNR),
    FOREIGN KEY (ERNAEHRUNGSKATNR) REFERENCES ERNAEHRUNGSKATEGORIE (ERNAEHRUNGSKATNR)
);

CREATE TABLE LIEFERANT (
    LIEFNR      INTEGER NOT NULL,
    NAME        VARCHAR(50),
    STRASSE     VARCHAR(50),
    HAUSNR      VARCHAR(10),
    POSTLEITZAHL    VARCHAR(5),
    ORT             VARCHAR(50),
    PRIMARY KEY (LIEFNR),
    FOREIGN KEY (POSTLEITZAHL, ORT) REFERENCES POSTLEITZAHL (POSTLEITZAHL, ORT)
);

CREATE TABLE ZUTAT_LIEFERANT (
    ZUTATNR           INTEGER NOT NULL,
    LIEFNR          INTEGER NOT NULL,
    MENGE           INTEGER,
    PRIMARY KEY (ZUTATNR,LIEFNR),
    FOREIGN KEY (ZUTATNR) REFERENCES ZUTAT (ZUTATNR),
    FOREIGN KEY (LIEFNR) REFERENCES LIEFERANT (LIEFNR)
);

